// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TgBot.DB;

namespace TgBot.Migrations.TgBot
{
    [DbContext(typeof(TgBotContext))]
    [Migration("20200408221612_PollAnswerOptionId")]
    partial class PollAnswerOptionId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TgBot.DB.Entities.Chat", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("TgBot.DB.Entities.ListenerState", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("ListenerType")
                        .HasColumnType("text");

                    b.Property<bool>("State")
                        .HasColumnType("boolean");

                    b.HasKey("ChatId", "ListenerType");

                    b.ToTable("ListenerStates");
                });

            modelBuilder.Entity("TgBot.DB.Entities.MessageEntry", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<int>("MessageId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LiveUntilUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MessageType")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ChatId", "MessageId");

                    b.ToTable("MessageEntries");
                });

            modelBuilder.Entity("TgBot.DB.Entities.PolicySettings", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("MessageType")
                        .HasColumnType("integer");

                    b.Property<int>("Period")
                        .HasColumnType("integer");

                    b.Property<int>("PeriodValue")
                        .HasColumnType("integer");

                    b.HasKey("ChatId", "UserId", "MessageType");

                    b.ToTable("PolicySettings");
                });

            modelBuilder.Entity("TgBot.DB.Entities.Poll", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MessageId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("TgBot.DB.Entities.PollAnswer", b =>
                {
                    b.Property<string>("PollId")
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastNotifyTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("NotifyCount")
                        .HasColumnType("integer");

                    b.Property<int>("Option")
                        .HasColumnType("integer");

                    b.HasKey("PollId", "UserId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("TgBot.DB.Entities.RulesMessage", b =>
                {
                    b.Property<long>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("ChatId");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("TgBot.DB.Entities.Stats", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MessageCount")
                        .HasColumnType("integer");

                    b.HasKey("ChatId", "UserId", "Date");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("TgBot.DB.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TgBot.DB.Entities.UserWarnings", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("UserWarnings");
                });
#pragma warning restore 612, 618
        }
    }
}
